include('auto');

init() 



if(getWeapon(Fight.self)==null) setWeapon(Items.getItem(WEAPON_MAGNUM));
var enemy = Fight.getEntity(getNearestEnemy());

// debug qui affiche les cases safe en vert et avec du danger en rouge.
if(false) {
	var arrayDanger = []
	for(var c : var d in Fight.self.reachableCells) {
		var danger = MapDanger.getCellDanger(c)
		if(danger.dmg > 0) { 
			mark(c.id, getColor(danger.dmg, 0, 0))
			markText(c.id, round(danger.dmg))
			arrayDanger[round(danger.dmg)] = danger
		}
		else {
			mark(c.id, COLOR_GREEN)
		}
	}
	for(var danger in arrayDanger){
		debug(danger)
	}
}

// debug de la map d'actions'
if(false) {
	for(var item :var array_cell_actions in MapAction._item_cell_actions){
		debug(item)
		for(var cell: var array_actions in array_cell_actions){
			mark(cell.id, COLOR_BLUE)
		}
		pause()
		clearMarks()
	}
}

// approche + attaque
var combo = MapDanger.getPotentialCombo(Fight.self, enemy.cell)
if(count(combo.actions)>0) combo.play()
else {
	var cellToUsePistol = getCellToUseWeapon(WEAPON_PISTOL, enemy.id)
	var path = getPath(getCell(), cellToUsePistol)
	if(count(path)>getMP()){ // avance prudente
		for(var cell in path){
			var danger = MapDanger.getCellDanger(Map.getCell(cell))
			if(danger.dmg == 0) moveTowardCell(cell)
		}
	} else { // je peux tirer sur l'adv: gogo
		debugE('SHOULD NOT BE HERE !')
	}
}

// move dÃ©fensif
if(getMP()>0){ // on se cache si possible !
	Fight.self.refresh()
	var safeCell = null, tmpDanger = 9999999
	for(var cell:var mp in Fight.self.reachableCells){
		var danger = MapDanger.getCellDanger(cell)
		if(tmpDanger > danger.dmg) {
			safeCell = cell
			tmpDanger = danger.dmg
		}
	}
	moveTowardCell(safeCell)
}

// cast avec le reste des TP
function failSafe(){
	var tpleft = getTP()
	Items.getItem(CHIP_MOTIVATION).useItem(Fight.self)
	if(getAbsoluteShield(Fight.self)<=0) Items.getItem(CHIP_HELMET).useItem(Fight.self)
	if(Fight.self.lifeMissing>0){
		Items.getItem(CHIP_CURE).useItem(Fight.self)
		Items.getItem(CHIP_BANDAGE).useItem(Fight.self)
	}
	Items.getItem(CHIP_PROTEIN).useItem(Fight.self)
	if(getRelativeShield(Fight.self)<=0) Items.getItem(CHIP_WALL).useItem(Fight.self)
	debug("failSafe TP used: "+(tpleft-getTP()))
}
failSafe()