include('../auto')

/*
 * Ensemble d'actions formant un combo 
 * L'objet combo contient les dommages approximatifs calculé dans MapDanger::getPotentialCombo
 */
class Combo {
	actions = []
	score = null
	
	/*
	 * Ajout d'action dans l'ensemble d'actions du combo
	 * @param action Action a ajouter dans le combo
	 */
	add(action){
		push(this.actions, action)
	}
	
	/*
	 * pour chaque action dans l'ensemble d'actions
	 * on se déplace a l'emplacement définis dans la génération de l'action et on éxécute l'Item sur la cible définis.
	 */
	play(){
		// debug(this)
		for(var action in this.actions){
			debug(action)
			debug(action.consequences)
			if(action.from != Fight.selfCell) moveTowardCell(action.from)
			if(action.to == Fight.selfCell) action.item.useItemOnCell(Map.getCell(getCell()))
			else action.item.useItemOnCell(action.to)
		}
	}
	
	/*
	 * retourne la somme des scores des actions du combo
	 */
	getScore(){
		if(this.score === null){
			for(var action in this.actions){
				this.score +=action.score
			}
		}
		return this.score
	}
	
	/*
	 * Format chaîne de caractères utilisée pour des tests / debugs.
	 */
	string(){
		var str= '<Combo: ['
		for(var action in this.actions){
			str+= '\n'+action
		}
		str+=']>'
		return str
	}
}