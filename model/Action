/*
 * Action réalisable d'une entité vers une autre
 */
class Action {
	public from
	public to
	public item
	constructor(item, from, to){
		this.item = item
		this.from = from
		this.to = to
	}
	
	getScore(){
		var targets = getItemTargets(this.item, this.to)
		var score = 0
		for(var targetId in targets){
			var target = Fight.getEntity(targetId)
			var dmg = 0
			for(var effect in this.item.effects) {
				if(effect.type == EFFECT_DAMAGE){
					dmg+= effect.getValue(Fight.self, target)
				} else {
					debugW('unhandledEffect on ' + item + ' effect: '+ effect.type)
				}
			}
			if(target.isFriend) score -= dmg
			else score += dmg
		}
	}
	
	/*
	 * Format chaîne de caractères utilisée pour des tests / debugs.
	 */
	string(){
		return "<Action "+this.item+":"+this.from+":"+this.to+">"
	}
}