include('../auto')

class Items {
	private static _items = []
	
	constructor() {
		for(var i in getAllWeapons()+getAllChips()) {
			_items[i] = new Item(i)
		}
	}
	
	static getItems(entityId) {
		var result = []
		for(var i in getWeapons(entityId)+getChips(entityId)){
			push(result, _items[i]);
		}
		return result
	}
	
	// TODO faire de belles boucles propre
	static getOrderedOffensiveItems(entityId) {
		var entity = Fight.getEntity(entityId)
		var dmg, cost, effects, allItems = [], stuff = Items.getItems(entityId)
		var absShield = getAbsoluteShield(), relShield = getRelativeShield();
		for(var item in stuff){
			// reminder le cd est décrément au début du round, donc 1 est utilisable next rnd
			if(item.haveCD && getCooldown(item.id, entityId)>1) continue;
			dmg=0;
			if(isEnemy(entityId)){
				for(var e in item.effects){
					if(e.type == EFFECT_DAMAGE ){
						dmg += (e.avg*(1+(entity.str/100))*(1+(entity.pwr/100))*(1-(relShield/100)))-absShield;
					}
					else if(e[0] == EFFECT_POISON){
						dmg += e.avg*(1+(entity.mgc/100))*(1+(entity.pwr/100))*e.duration;
					}
					else if(e[0] == EFFECT_HEAL){
						dmg -= e.avg*(1+(entity.wsd/100));
					}
					// ici add les effets d'entrave en score pts->dmg
				}
				allItems[item] = dmg/item.cost;
			}else if(isAlly(entityId)){
				for(var e in effects){
					if(e.type == EFFECT_HEAL ){
						dmg+= e.avg*(1+(entity.wsd/100));
					}
					else if(e[0] == EFFECT_ABSOLUTE_SHIELD){
						dmg += e.avg*(1+(entity.rst/100)) *e.duration;
					}
					else if(e[0] == EFFECT_RELATIVE_SHIELD){
						dmg += e.avg*(1+(entity.rst/100)) *e.duration *4; // FIXME le *4 devrait être une global de ratio abs/rel
					}
				}
				allItems[item] = dmg/cost;
			}
		}

		allItems = arraySort(allItems, function(a,b){	
			if(a<b) return 1;
			else if(a>b) return -1;
			return 0;
		});
		return allItems;
	}
	
	static getItem(id){
		return _items[id]
	}
}
